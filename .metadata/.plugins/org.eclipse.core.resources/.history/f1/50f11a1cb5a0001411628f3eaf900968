system.getInfo("model")

display.setStatusBar(display.HiddenStatusBar)

local centerY = display.contentCenterY
local centerX = display.contentCenterX
local screenLeft = display.screenOriginX
local screenWidth = display.viewableContentWidth - screenLeft * 2
local screenRight = screenLeft + screenWidth
local screenTop = display.screenOriginY
local screenHeight = display.viewableContentHeight - screenTop * 2
local screenBottom = screenTop + screenHeight
local screenTopSB = screenTop + display.topStatusBarContentHeight
local screenHeightSB = display.viewableContentHeight - screenTopSB
local screenBottomSB = screenTopSB + screenHeightSB

local gameData = require( "gameData" )
local particles = require("particleEffects")

local composer = require( "composer" )

local scene = composer.newScene()

-- -----------------------------------------------------------------------------------------------------------------
-- All code outside of the listener functions will only be executed ONCE unless "composer.removeScene()" is called.
-- -----------------------------------------------------------------------------------------------------------------

-- local forward references should go here

-- -------------------------------------------------------------------------------
-- Music for the main menu
local function mmMusic()

  local musicOn = require("bgMusic")
  
  musicOn.mmSound()
  --musicOn.ifTrue()
  
end

--load save data if file exists otherwise create new data
local loadData = function ()
  
  local filePath = system.pathForFile("data.txt", system.DocumentsDirectory)
  local file = io.open(filePath, "r")
  
  if file then
    --read save file into save data table
    gameData.gameProgress = file:read("*n")
    io.close(file)
  else
    --create save file
    file = io.open(filePath, "w")
    file:write(gameData.gameProgress)
    io.close(file)
  end
  
end

-- load save game data
loadData()

-- "scene:create()"
function scene:create( event )

    local sceneGroup = self.view

    -- Initialize the scene here.
    -- Example: add display objects to "sceneGroup", add touch listeners, etc.
      local function loadIntro() 
        
       local logoI = display.newImageRect("orphin_logov2.png", 400, 200)
       logoI.x = centerX
       logoI.y = centerY
       logoI.alpha = 0
       sceneGroup:insert(logoI)
       
        local function trans()
        
         local tran = display.newImage("transition.png")
         tran.x = centerX
         tran.y = centerY
         tran.alpha = 0
         sceneGroup:insert(tran)
         
          local function coronaImage()
            
           local corona = display.newImageRect("corona.png", 600, 400)
           corona.x = centerX
           corona.y = centerY
           corona.alpha = 0
           sceneGroup:insert(corona) 
            
            local function trans2()
            
             local tran2 = display.newImage("transition.png")
             tran2.x = centerX
             tran2.y = centerY
             tran2.alpha = 0
             sceneGroup:insert(tran2)
             
              local function mainBG()
          
               corona:removeSelf()
               corona = nil
               tran2:removeSelf()
               tran2 = nil
               tran:removeSelf()
               tran = nil
               logoI:removeSelf()
               logoI = nil
               
               mmMusic() 
               
               local bg = display.newImageRect("nebula.png", 820, 820)
               bg.x = centerX
               bg.y = centerY
               bg.alpha = 0
               
               local bg2 = display.newImageRect("bgstars2.png", 820, 820)
               bg2.x = centerX
               bg2.y = centerY
               bg2.alpha = 0
               
               local bg3 = display.newImageRect("bgstars1.png", 700, 700)
               bg3.x = centerX
               bg3.y = centerY
               bg3.alpha = 0
               
               local bg4 = display.newImageRect("planets.png", 820, 820)
               bg4.x = centerX
               bg4.y = centerY
               bg4.alpha = 0
               
               particles.mainMenu()
               
               --Remove BG when another class is called
               local function bgRemove()
               
               bg:removeSelf()
               bg = nil
               
               end
                
               composer.gotoScene("mainMenu")
               
               transition.to(bg, {time = 3000, alpha = 1})
               transition.to(bg2, {time = 3000, alpha = 1})
               transition.to(bg3, {time = 3000, alpha = 1})
               transition.to(bg4, {time = 3000, alpha = 1})
                    
                 local function rotateImg()
                  
                   transition.to(bg, {rotation = bg.rotation -360, time = 40000, onComplete = rotateImg })
                   
                 end
                 
                 local function rotateImg2()
                 
                  transition.to(bg2, {rotation = bg2.rotation -360, time = 27000, onComplete = rotateImg2 })
                 
                 end
                 
                 local function rotateImg3()
                 
                  transition.to(bg3, {rotation = bg3.rotation -360, time = 24000, onComplete = rotateImg3 })
                 
                 end
                 
                 local function rotateImg4()
                 
                  transition.to(bg4, {rotation = bg4.rotation -360, time = 22000, onComplete = rotateImg4 })
                 
                 end
                
                transition.to(bg, {time = 40000, rotation = -360, onComplete = rotateImg})
                transition.to(bg2, {time = 27000, rotation = -360, onComplete = rotateImg2})
                transition.to(bg3, {time = 24000, rotation = -360, onComplete = rotateImg3})
                transition.to(bg4, {time = 22000, rotation = -360, onComplete = rotateImg4})
                
              end
              
             transition.to(tran2, {time = 2000, alpha = 1, onComplete = mainBG})
      
            end
        
           transition.to(corona, {time = 3000, alpha = 1, onComplete = trans2})
            
          end
            
         transition.to(tran, {time = 1000, alpha = 1, onComplete = coronaImage})
            
        end
        
       transition.to(logoI, {time = 3000, alpha = 1, onComplete = trans})
        
      end 
end


-- "scene:show()"
function scene:show( event )

    local sceneGroup = self.view
    local phase = event.phase

    if ( phase == "will" ) then
        -- Called when the scene is still off screen (but is about to come on screen).
    elseif ( phase == "did" ) then
        -- Called when the scene is now on screen.
        -- Insert code here to make the scene come alive.
        -- Example: start timers, begin animation, play audio, etc.
    end
end


-- "scene:hide()"
function scene:hide( event )

    local sceneGroup = self.view
    local phase = event.phase

    if ( phase == "will" ) then
        -- Called when the scene is on screen (but is about to go off screen).
        -- Insert code here to "pause" the scene.
        -- Example: stop timers, stop animation, stop audio, etc.
    elseif ( phase == "did" ) then
        -- Called immediately after scene goes off screen.
    end
end


-- "scene:destroy()"
function scene:destroy( event )

    local sceneGroup = self.view

    -- Called prior to the removal of scene's view ("sceneGroup").
    -- Insert code here to clean up the scene.
    -- Example: remove display objects, save state, etc.
end


-- -------------------------------------------------------------------------------

-- Listener setup
scene:addEventListener( "create", scene )
scene:addEventListener( "show", scene )
scene:addEventListener( "hide", scene )
scene:addEventListener( "destroy", scene )

-- -------------------------------------------------------------------------------

return scene